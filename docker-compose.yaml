version: "3.5"

volumes:
  postgres:
  pgadmin:

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
#  zookeeper:
#    image: "docker.io/bitnami/zookeeper:3"
#    ports:
#      - "2181:2181"
#    volumes:
#      - "zookeeper_data:/bitnami"
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka:
#    image: "docker.io/bitnami/kafka:2-debian-10"
#    ports:
#      - "9092:9092"
#    expose:
#      - "9093"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
#      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#    depends_on:
#      - zookeeper
#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui
#    ports:
#      - "9090:8080"
#    restart: always
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
#
#volumes:
#  zookeeper_data:
#    driver: local
#  kafka_data:
#    driver: local
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: create_order:2:1
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
  postgres:
    container_name: bookstore_postgres
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_PASSWORD: password
      POSTGRES_USER: burak
    volumes:
      - postgres:/data/postgres
    ports:
      - '5432'
    restart: unless-stopped

  pgadmin:
    container_name: bookstore_pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - '5050:5050'
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'postgres:5432:*:burak:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"